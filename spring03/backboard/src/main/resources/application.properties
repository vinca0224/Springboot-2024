spring.application.name=backboard

## 포트 설정(기본: 8080)
server.port=8080

## 로그 색상
spring.output.ansi.enabled=always

## 수정사항 저장 시 자동 재빌드
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

## 로그레벨 설정
logging.level.org.springframework=info
### 자신의 그룹아이디 입력
logging.level.com.vinca=debug

# ## H2 설정 - 내가 개발할 때 만 쓰는 형태 추천
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.datasource.url=jdbc:h2:~/local
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=

## Oracle 설정 - 운영 DB
spring.datasource.url= jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.driver-class-name= oracle.jdbc.OracleDriver
spring.datasource.username= pknusb
spring.datasource.password= pknu_p@ss

## JPA 설정
# spring.jpa.database=h2
spring.jpa.show-sql=true
spring.jpa.database=oracle
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.OracleDialect
### DDL-auto 자동으로 테이블을 만들어 주는 기능
### 데이터베이스 관리 정책: 실제 운영하는 서버에서는 validation(1순위), update(2순위)로 사용
### create: 앱 실행 시 마다 생성  (최초 개발 시)
### create-drop 앱 실행 시 생성, 종료시 드랍  (비추천)
### update: 최초 한번만, 변경사항이 있으면 반영  (개발 과정시)
### validate: DB테이블과 엔티티 클래스가 일치하는지 검증만  (운영시)
### none(default)
spring.jpa.hibernate.ddl-auto=update